---

- block:
    - name: apt install packages
      become: yes
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common

    - name: Add GPG key for docker
      become: yes
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg

    - name: Add apt repository for docker
      become: yes
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"

    - name: apt install docker packages
      become: yes
      apt:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
          # - docker-ce=5:25.0.2-1~ubuntu.22.04~jammy
          - docker-ce=5:25.0.3-1~ubuntu.20.04~focal

    - name:  Add user to docker group
      become: yes
      user:
        name: "{{ ansible_env.USER }}"
        groups: docker
        append: yes

    - name: Verify that the docker service is running
      become: yes
      systemd:
        name: docker
        state: started
        enabled: yes
  when: inventory_hostname in groups['cicd']

- block:
    - name: generate SSH key "{{ ssh_key_filename }}"
      user:
        name: "{{ cicd_node_username }}"
        generate_ssh_key: yes
        ssh_key_type: rsa
        ssh_key_bits: 4096
        ssh_key_file: /home/{{ cicd_node_username }}/.ssh/{{ ssh_key_filename }}
        force: yes

      # - name: Set authorized key taken from file
      #   ansible.posix.authorized_key:
      #     user: charlie
      #     state: present
      #     key: "{{ lookup('file', '/home/charlie/.ssh/id_rsa.pub') }}"

    # - name: Copy SSH public key to master nodes
    #   expect:
    #     command: "ssh-copy-id -i /home/{{ ansible_ssh_user }}/.ssh/{{ ssh_key_filename }}.pub {{ ansible_ssh_user }}@{{ hostvars[item].ansible_host }}"
    #     responses:
    #       "Are you sure you want to continue connecting (yes/no/[fingerprint])?": yes
    #       "{{ ansible_ssh_user }}@{{ hostvars[item].ansible_host }}'s password": "{{ master_node_password }}"
    #   with_items: "{{ groups['kubemaster'] }}"

    # - name: Copy SSH public key to worker nodes
    #   expect:
    #     command: "ssh-copy-id -i /home/{{ ansible_ssh_user }}/.ssh/{{ ssh_key_filename }}.pub {{ ansible_ssh_user }}@{{ hostvars[item].ansible_host }}"
    #     responses:
    #       "Are you sure you want to continue connecting (yes/no/[fingerprint])?": yes
    #       "{{ ansible_ssh_user }}@{{ hostvars[item].ansible_host }}'s password": "{{ worker_node_password }}"
    #   with_items: "{{ groups['kubeworker'] }}"
  when: inventory_hostname in groups['cicd']