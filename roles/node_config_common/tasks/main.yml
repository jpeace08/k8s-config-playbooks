---

- block:
    - name: disable ufw
      ansible.builtin.systemd:
        name: ufw 
        state: stopped 
        enabled: no
      when: disable_firewall
  when: ansible_os_family == 'Debian'

- name: Install openssl
  ansible.builtin.package: 
    name: 
      - openssl
    state: present

- name: create an empty file for Kubernetes sysctl params
  copy:
    content: ""
    dest: /etc/sysctl.d/99-kubernetes-cri.conf
    force: no

- name: configure sysctl params for Kubernetes
  lineinfile:
    path: /etc/sysctl.d/99-kubernetes-cri.conf
    line: "{{ item }}"
  with_items:
    - 'net.bridge.bridge-nf-call-iptables  = 1'
    - 'net.ipv4.ip_forward                 = 1'
    - 'net.bridge.bridge-nf-call-ip6tables = 1'

- name: apply sysctl params without reboot
  command: sysctl --system

- name: Disable swapoff
  become: yes
  shell: swapoff -a

- name: Disable swapoff permanently
  become: yes
  replace:
    path: /etc/fstab
    regexp: '^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'
    replace: '#\1\2\3swap\4'
    backup: yes

- name: check iptables version
  ansible.builtin.shell: iptables --version
  register: iptables_version
  ignore_errors: true

- block:  
    - community.general.alternatives:
        name: iptables
        link: /usr/sbin/iptables
        path: /usr/sbin/iptables-legacy

    - community.general.alternatives:
        name: ip6tables
        link: /usr/sbin/ip6tables
        path: /usr/sbin/ip6tables-legacy

    - ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible for iptables-legacy"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
  when: '"nf_tables" in iptables_version.stdout'
  ignore_errors: "{{ ansible_check_mode }}"

# - block:
#     - name: Install open-iscsi,nfs-common using apt
#       ansible.builtin.apt: 
#         name: 
#           - open-iscsi
#           - nfs-common
#         state: present 

#     - name: start and enable iscsid
#       ansible.builtin.systemd:
#         name: iscsid
#         state: started
#         enabled: yes
#   when:
#     - install_longhorn
#     - inventory_hostname in groups['kubeworker']