---

- name: disable ufw
  become: yes
  ansible.builtin.systemd:
    name: ufw 
    state: stopped 
    enabled: no
  when: disable_firewall

- block:
    - name: create an empty file for Kubernetes sysctl params
      become: yes
      copy:
        content: ""
        dest: /etc/sysctl.d/99-kubernetes-cri.conf
        force: no

    - name: configure sysctl params for Kubernetes
      become: yes
      lineinfile:
        path: /etc/sysctl.d/99-kubernetes-cri.conf
        line: "{{ item }}"
      with_items:
        - 'net.bridge.bridge-nf-call-iptables  = 1'
        - 'net.ipv4.ip_forward                 = 1'
        - 'net.bridge.bridge-nf-call-ip6tables = 1'

    - name: apply sysctl params without reboot
      become: yes
      command: sysctl --system

- block:
    - name: Disable swapoff
      become: yes
      shell: swapoff -a

    - name: Disable swapoff permanently
      become: yes
      replace:
        path: /etc/fstab
        regexp: '^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'
        replace: '#\1\2\3swap\4'
        backup: yes

- name: check iptables version
  ansible.builtin.shell: iptables --version
  register: iptables_version
  ignore_errors: true

- block:
    - name: config iptables
      become: yes
      community.general.alternatives:
        name: iptables
        link: /usr/sbin/iptables
        path: /usr/sbin/iptables-legacy

    - name: config ip6tables
      become: yes
      community.general.alternatives:
        name: ip6tables
        link: /usr/sbin/ip6tables
        path: /usr/sbin/ip6tables-legacy

    - name: reboot for iptables-legacy
      become: yes
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible for iptables-legacy"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
  when: '"nf_tables" in iptables_version.stdout'
  ignore_errors: "{{ ansible_check_mode }}"

- block:
    - name: Install open-iscsi,nfs-common using apt
      become: yes
      ansible.builtin.apt: 
        name: 
          - open-iscsi
          - nfs-common
        state: present 

    - name: start and enable iscsid
      become: yes
      ansible.builtin.systemd:
        name: iscsid
        state: started
        enabled: yes
  when:
    - install_longhorn
    - inventory_hostname in groups['kubeworker']
 
- block:
    - name: Add IP address of all hosts to all hosts
      become: yes
      lineinfile:
        dest: /etc/hosts
        regexp: '.*{{ item }}$'
        line: "{{ hostvars[item].ansible_host }} {{item}}"
        state: present
      when: hostvars[item].ansible_host is defined
      with_items: "{{ groups.all }}"

- block:
    - name: Install Chrony
      become: yes
      ansible.builtin.apt:
        name: chrony
        state: present

    - name: Configure Chrony
      become: yes
      ansible.builtin.template:
        src: chrony.conf.j2
        dest: /etc/chrony/chrony.conf
      notify: restart chrony

    - name: Ensure Chrony is running and enabled on boot
      become: yes
      ansible.builtin.service:
        name: chrony
        state: started
        enabled: yes
      notify:
        - restart chrony